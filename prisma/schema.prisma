generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// workspace
enum Role {
  member
  admin
  observer
}

model Workspace {
  id               Int      @id @default(autoincrement())
  name             String
  description      String?
  picture          String?
  companyInfo      String   @default("")
  productOrService String   @default("")
  values           String   @default("")
  ownerId          String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  members    WorkspaceMember[]
  simulators Simulator[]

  @@map("workspaces")
}

model WorkspaceMember {
  workspaceId Int
  userId      String
  role        Role     @default(member)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  @@id(name: "key", fields: [workspaceId, userId])
  @@map("workspace_members")
}

// simulators
model Simulator {
  id             Int      @id @default(autoincrement())
  workspaceId    Int?
  title          String
  description    String
  picture        String?
  duration       Int
  behaviorPrompt String
  createdBy      String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  workspace Workspace? @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  prepQuestions PrepQuestion[]
  evaluations   Evaluation[]

  @@map("simulators")
}

model PrepQuestion {
  id          Int    @id @default(autoincrement())
  simulatorId Int
  label       String

  simulator Simulator @relation(fields: [simulatorId], references: [id], onDelete: Cascade)

  @@map("prep_questions")
}

model Evaluation {
  id               Int    @id @default(autoincrement())
  simulatorId      Int
  frameworkPrompt  String
  assessmentPrompt String
  feedbackPrompt   String

  simulator Simulator @relation(fields: [simulatorId], references: [id], onDelete: Cascade)

  @@map("evaluations")
}
